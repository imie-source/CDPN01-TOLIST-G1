version = '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'cargo'
apply plugin: "sonar"
apply plugin: "sonar-runner"
sourceCompatibility  = 1.6

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test'
        }
    }
    
}
war {
    from 'WebContent' // adds a file-set to the root of the archive
    webXml = file('WebContent/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
    webInf { from 'WebContent/WEB-INF' } // adds a file-set to the WEB-INF dir.
    
    
}
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:0.6.1'
       
    
    }
}
war.dependsOn test
repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'org.jboss.spec.javax.servlet:jboss-servlet-api_3.0_spec:1.0.0.Final'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.mockito:mockito-core:1.9.5'
     def cargoVersion = '1.3.3'
	cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
              "org.codehaus.cargo:cargo-ant:$cargoVersion",
             group: 'org.jboss.as', name: 'jboss-as-controller-client', version: '7.1.1.Final'

} 

cargo {
    containerId = 'jboss71x'
    port = 9090

    

    remote {
        hostname = 'localhost'
        username = 'imie'
        password = '1m1e'
    }

}

cargoUndeployRemote {
  ignoreFailures = true
}

 sonarRunner.dependsOn war
	cargoDeployRemote.dependsOn sonarRunner
sonar {
    server {
        url = "http://localhost"
    }
    database {
        url = "jdbc:h2:tcp://localhost/sonar"
	driverClassName = "org.h2.Driver"
        username="sonar"
        password="sonar"
    }
	
}
sonarRunner{
 sonarProperties {
property "sonar.projectName", "Simple Java Gradle Project"
        property "sonar.projectKey", "org.codehaus.sonar:IMIE-TOLIST-G1"
        property "sonar.jdbc.url", "jdbc:h2:tcp://localhost/sonar"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"
        }
   }

